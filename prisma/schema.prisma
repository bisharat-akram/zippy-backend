generator client {
  provider        = "prisma-client-js"
  output          = "../src/common/generated/client"
  previewFeatures = ["fullTextSearch", "postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  // extensions = [uuid_ossp(map: "uuid-ossp")]
  extensions = [pgcrypto]
}

model User {
  id          Int    @id @default(autoincrement())
  email       String @unique @db.VarChar(100)
  phone       String @unique @db.VarChar(20)
  accountType String @db.VarChar(20)

  otpCode       String?   @db.VarChar(6)
  otpExpiration DateTime? @db.Timestamp

  emailVerified Boolean @default(false)
  phoneVerified Boolean @default(false)

  password  String   @db.VarChar(200)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  personalAccount PersonalAccount?
  businessAccount BusinessAccount?

  @@map("users")
}

model PersonalAccount {
  id          Int    @id @default(autoincrement())
  firstName   String @map("first_name") @db.VarChar(50)
  lastName    String @map("last_name") @db.VarChar(50)
  dateOfBirth String @map("date_of_birth") @db.VarChar(20)
  country     String @db.VarChar(100)
  fullAddress String @db.VarChar(200)
  zipCode     String @db.VarChar(20)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  @@map("personal_accounts")
}

model BusinessAccount {
  id            Int    @id @default(autoincrement())
  country       String @map("country") @db.VarChar(50)
  category      String
  name          String @db.VarChar(100)
  address       String @db.VarChar(200)
  registration  String @db.VarChar(50)
  noOfEmployees Int
  type          String
  founder       String @db.VarChar(40)
  socialLink    String @db.VarChar(200)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  @@map("business_accounts")
}
